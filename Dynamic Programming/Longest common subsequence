#include<iostream>
#include<vector>
#define optimize ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
using namespace std;
//recursive+memoization
int lcs(string s1,string s2,int index1,int index2,vector<vector<int>>&dp){
//base case
if(index1<0 || index2<0){
    return 0;
}
if(dp[index1][index2]!=-1){
    return dp[index1][index2];
}
else{
    if(s1[index1]==s2[index2]){
        return dp[index1][index2]= 1+lcs(s1,s2,index1-1,index2-1,dp);
    }
    else{
        return dp[index1][index2]= max(lcs(s1,s2,index1-1,index2,dp),lcs(s1,s2,index1,index2-1,dp));
    }
}
}
int main(){
string s1,s2;
cin>>s1>>s2;
int index1=s1.length(),index2=s2.length();
vector<vector<int>>dp(index1,vector<int>(index2,-1));
int res=lcs(s1,s2,index1-1,index2-1,dp);
cout<<res<<endl;
}
