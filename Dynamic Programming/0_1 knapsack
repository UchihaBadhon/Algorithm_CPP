#include<iostream>
#include<string>
#define optimize ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
using namespace std;
//recursive way
int max_profit(int weight[],int val[],int w,int n){
//BAse condition
if(n==0||w==0){
    return 0;
}
//if the weight of the nth item is greater than the knapsack weight

if(weight[n-1]>w){
    return max_profit(weight,val,w,n-1);
}
//I have 2 choice if the knapsack weight is greater than the item weight
//1. I can take the item, if take, then minus the weight and add the value
//2. I will not take the value
else{
    return max(val[n-1]+max_profit(weight,val,w-weight[n-1],n-1),max_profit(weight,val,w,n-1));
}
}
int main(){
int n;
cin>>n;
int weight[n],val[n];
for(int i=0;i<n;i++){
    cin>>weight[i];
}
for(int i=0;i<n;i++){
    cin>>val[i];
}
cout<<"Enter the weight of knapsack"<<endl;
int w;
cin>>w;
int res=max_profit(weight,val,w,n);
cout<<res<<endl;
}
