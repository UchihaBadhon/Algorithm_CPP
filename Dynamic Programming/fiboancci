#include<iostream>
#include<vector>
//#define optimize ios
using namespace std;
//method-1
//T.C=O(n),S.C=O(n)+O(n)
int dp_fib(int x,vector<int>&dp){
if(x<=1){
    return x;
}
if(dp[x]!=0){
    return dp[x];
}
else{
    return dp[x]=dp_fib(x-1,dp)+dp_fib(x-2,dp);
}
}
//method-2
//T.C=O(n),S.C=O(n)
int dp_fib2(int x,vector<int>&dp){
dp[0]=0,dp[1]=1;
int i;
for(i=2;i<=x;i++){
    dp[i]=dp[i-1]+dp[i-2];
}
return dp[i-1];
}
int main(){
int n;
cin>>n;
vector<int>dp(n+1,0);
//int res=dp_fib(n,dp);
int res2=dp_fib2(n,dp);
cout<<res2<<endl;
}
